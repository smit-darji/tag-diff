name: Published and Edited Diff Workflow

on: 
  release: 
    types: [published, edited]
    branches:
      - Master

jobs:
  diff_published:
    runs-on: ubuntu-latest
    outputs:
      changedfiles: ${{ steps.set-changed-files.outputs.changedfiles }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history and tags

      - name: Set up GitHub CLI
        run: |
          curl -sL https://github.com/cli/cli/releases/download/v2.26.0/gh_2.26.0_linux_amd64.tar.gz | tar xz
          sudo mv gh_2.26.0_linux_amd64/bin/gh /usr/local/bin/

      - name: Authenticate GitHub CLI
        run: |
            gh auth login --with-token <<< "${{ secrets.TOKEN }}"

      - name: list release
        run: |
          gh release list

      - name: Get latest and previous release tags
        id: get_tags
        run: |
            gh release list --limit 1000 | awk 'NR > 1 {print $1 "\t" $2 "\t" $3}' | jq -R -s -c '
            split("\n") | .[1:-1] | map(
            {
                tagName: split("\t")[0],
                createdAt: split("\t")[1],
                isDraft: split("\t")[2]
            }
            ) | map(select(.createdAt != null and .createdAt != "")) | sort_by(.createdAt) | reverse | 
            . as $all | 
            (.[0] | .status = "latest") as $latest | 
            (.[1] | .status = "previous_latest") as $previous_latest |
            [$latest, $previous_latest]'

      - name: Get list of changed files
        id: set-changed-files
        run: |
          changedfiles=$(git diff --name-only --diff-filter=ACMRT ${{ env.PREVIOUS_TAG }} ${{ env.LATEST_TAG }} | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo "changedfiles=$changedfiles" >> $GITHUB_OUTPUT

    
      - name: Output changed files
        run: |
            echo "Changed files between ${{ env.PREVIOUS_TAG }} and ${{ env.LATEST_TAG }}: ${{ steps.set-changed-files.outputs.changedfiles }}"